- day 21 of css in 30 days

JS - Closure

techsith - https://www.youtube.com/watch?v=71AtaJpJHw0
	   https://www.youtube.com/watch?v=-xqJo5VRP4A

fun fun function - https://www.youtube.com/watch?v=CQqwU2Ixu-U

The Coding Tech - https://www.youtube.com/watch?v=-jysK0nlz7A

mdn - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures
"In some programming languages, the local variables within a function exist only for the duration of that function's execution. Once 'makeFunc()' has finished executing, you might expect that the name variable would no longer be accessible. However, because the code still works as expected, this is obviously not the case in JavaScript.

The reason is that functions in JavaScript form closures. A closure is the combination of a function and the lexical environment within which that function was declared. This environment consists of any local variables that were in-scope at the time the closure was created. In this case, 'myFunc' is a reference to the instance of the function 'displayName' created when 'makeFunc' is run. The instance of 'displayName' maintains a reference to its lexical environment, within which the variable 'name' exists. For this reason, when 'myFunc' is invoked, the variable 'name' remains available for use and "Mozilla" is passed to 'alert'."